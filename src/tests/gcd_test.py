import unittest

from utilities.gcd import greatest_common_divisor


class TestGCD(unittest.TestCase):
    def setUp(self):
        self.small_number = 829

        self.small_divisor = 37

        self.small_number_2 = 828

        self.small_divisor_2 = 33

        self.big_number = 120938094587992391200102312830912380919804102381095129081290381905901285904190248102948129041029480912409129084089120984901824098120981231252233524890132089409184576999994572409812098401231541563423465345918240981280940981290840819240981209840891204981208940891208941902840981209456753485637968347895347938273

        self.big_number_2 = 120938094587992391200102312830912380919804102381095129081290381905901285904190248102948129041029480912409129084089120984901824098120981231252233524890132089409184576999994572409812098401231541563423465345918240981280940981290840819240981209840891204981208940891208941902840981209456753485637968347895347938274

        self.big_divisor = 23324234546645645645645645645561892731982738912371029386712903122228190230512981024039128937198237198237128937189237918237129838232348972398894732343972324234947289894723984723984728931927398127434231897439583749583479127389127398129853894309834950834578240128931029784125487127341290381209324850934890239812

    def test_small_number_factor_being_one(self):
        self.assertEqual(greatest_common_divisor(
            self.small_number, self.small_divisor), 1)

    def test_small_number_factor_being_not_one(self):
        self.assertEqual(greatest_common_divisor(
            self.small_number_2, self.small_divisor_2), 3)

    def test_big_number_facotr_being_one(self):
        self.assertEqual(greatest_common_divisor(
            self.big_number, self.big_divisor), 1)

    def test_big_number_factor_being_not_one(self):
        self.assertEqual(greatest_common_divisor(
            self.big_number_2, self.big_divisor), 2)
